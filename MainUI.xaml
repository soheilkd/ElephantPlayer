<Window
    x:Class="Player.MainUI" Background="Transparent"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" SizeChanged="Window_SizeChanged"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" KeyUp="Window_KeyUp"
    xmlns:player="clr-namespace:Player.Controls" xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Name="window"
    mc:Ignorable="d" Loaded="Window_Loaded" Closing="Window_Closing" Drop="Window_Drop" AllowDrop="True"
    Title="Elephant Player" Height="544" Width="432" >
    <Grid Background="{DynamicResource KeyOfBackground}" x:Name="ContentGrid">
        <MediaElement x:Name="Player" UnloadedBehavior="Manual" LoadedBehavior="Manual"
              MouseDown="Player_MouseDown" MouseMove="Player_MouseMove">
            <MediaElement.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Toggle Full Screen" Click="Player_ContextFullScreen">
                        <MenuItem.Icon>
                            <player:MaterialIcon Icon="fullscreen" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </MediaElement.ContextMenu>
        </MediaElement>
        <ListView x:Name="QueueListView" BorderThickness="0" Margin="0, 0, 0, 85" ScrollViewer.CanContentScroll="False" Background="{DynamicResource KeyOfBackground}">
            <ListView.Resources>
                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
            </ListView.Resources>
        </ListView>
        <Popup PlacementTarget="{Binding ElementName=SettingsButton}" Placement="Left">
            <Grid Background="#F333">
                <Grid.Resources>
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="Foreground" Value="White" />
                        <EventSetter Event="ToggleButton.Checked" Handler="AnySettingChanged" />
                        <EventSetter Event="ToggleButton.Unchecked" Handler="AnySettingChanged" />
                    </Style>
                    <Style TargetType="{x:Type GroupBox}">
                        <Setter Property="BorderBrush" Value="#FF004080" />
                        <Setter Property="BorderThickness" Value="1,0,0,2" />
                    </Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </Grid.Resources>
                <ScrollViewer>
                    <ScrollViewer.Resources>
                        <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
                    </ScrollViewer.Resources>
                    <StackPanel Width="500">
                        <CheckBox Content="Library Double Validation" x:Name="Pref_DoubleValid" />
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Popup>
        <Label x:Name="TitleLabel" Content="Title" Foreground="White" Margin="60, 0, 0, 50" Height="30" VerticalAlignment="Bottom"/>
        <player:MaterialButton x:Name="PreviousButton" Icon="Previous" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="80,0,0,25" Click="PreviousButton_Click" />
        <player:MaterialButton x:Name="NextButton" Icon="Next" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="165,0,0,25" Click="NextButton_Click" />
        <player:MaterialButton x:Name="PlayPauseButton" Icon="Play" Click="PlayPauseButton_Click" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="120,0,0,24" Height="28" Width="28"/>
        <player:MaterialButton x:Name="VisionButton" Icon="OndemandVideo" Click="VisionButton_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,34" Height="34" Width="34" EllipseType="Rectular"/>

        <player:MaterialButton x:Name="VolumeButton" Icon="Volume3" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0, 0, 55, 25" MouseDown="VolumeButton_MouseDown"/>
        <Popup x:Name="VolumePopup" PlacementTarget="{Binding ElementName=VolumeButton}" Placement="Top" AllowsTransparency="True" PopupAnimation="Fade">
            <Label x:Name="VolumeLabel" Content="100" HorizontalAlignment="Right" Foreground="White"/>
        </Popup>
        <player:MaterialButton x:Name="PlayModeButton" Icon="repeat" Click="PlayModeButton_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,100,25" />

        <Slider x:Name="PositionSlider"  ValueChanged="Position_Changed" PreviewMouseDown="Position_MouseDown"  
               VerticalAlignment="Bottom" Maximum="1000"
                        Foreground="#FF575757" Margin="40, 0, 40, 5">
            <Slider.Template>
                <ControlTemplate >
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Border x:Name="TrackBackground" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Height="9" Command="{x:Static Slider.DecreaseLarge}" Background="{TemplateBinding Foreground}" BorderBrush="Transparent"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Height="5" Command="{x:Static Slider.IncreaseLarge}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" >
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid >
                                                    <Ellipse Width="15" Height="15" x:Name="grip"  StrokeThickness="2" Stroke="{TemplateBinding Foreground}"
                                                             Fill="Transparent" Margin="-2, 0, 0, 0"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="StrokeThickness" TargetName="grip" Value="3"/>

                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="true">
                                                        <Setter Property="Fill" TargetName="grip" Value="DarkGray"/>
                                                        <Setter Property="StrokeThickness" TargetName="grip" Value="0" />
                                                    </Trigger>
                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                                        <BeginStoryboard>
                                                            <Storyboard >
                                                                <DoubleAnimation SpeedRatio="4" AccelerationRatio="0" DecelerationRatio="1" From="15" To="20" Storyboard.TargetName="grip" Storyboard.TargetProperty="Width"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                        <BeginStoryboard>
                                                            <Storyboard >
                                                                <DoubleAnimation SpeedRatio="4" AccelerationRatio="0" DecelerationRatio="1" From="15" To="20" Storyboard.TargetName="grip" Storyboard.TargetProperty="Height"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                                        <BeginStoryboard>
                                                            <Storyboard >
                                                                <DoubleAnimation SpeedRatio="2" AccelerationRatio="0" DecelerationRatio="1"  From="20" To="15" Storyboard.TargetName="grip" Storyboard.TargetProperty="Width"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                        <BeginStoryboard>
                                                            <Storyboard >
                                                                <DoubleAnimation SpeedRatio="2"  AccelerationRatio="0" DecelerationRatio="1" From="20" To="15" Storyboard.TargetName="grip" Storyboard.TargetProperty="Height"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Slider.Template>
        </Slider>
        <Label Content="00:00" Style="{DynamicResource TimeLabel}" HorizontalAlignment="Left" x:Name="TimeLabel_Current"/>
        <Label Content="00:00" Style="{DynamicResource TimeLabel}" HorizontalAlignment="Right" x:Name="TimeLabel_Full" Width="38"/>
        <Image x:Name="MiniArtworkImage" Height="55" Width="55" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,25">
            <Image.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseDown">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="MiniArtworkImage" SpeedRatio="2" AccelerationRatio="0.3" DecelerationRatio="0.7">
                            <DoubleAnimation Storyboard.TargetProperty="Width" From="{Binding Width, ElementName=MiniArtworkImage}" To="400"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="{Binding Width, ElementName=MiniArtworkImage}" To="400"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseUp">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="MiniArtworkImage" SpeedRatio="2" AccelerationRatio="0.3" DecelerationRatio="0.7">
                            <DoubleAnimation Storyboard.TargetProperty="Width" From="{Binding Width, ElementName=MiniArtworkImage}" To="55"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="{Binding Width, ElementName=MiniArtworkImage}" To="55"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Image.Triggers>
        </Image>
        <Grid x:Name="SettingsGrid" Background="Black" Visibility="Hidden" Opacity="0">
            <Label Content="Preferences" FontSize="22" FontWeight="SemiBold"/>
            <Label Content="Ancestor Key" Margin="0, 40, 0,0"/>
            <ComboBox x:Name="Settings_AncestorCombo" Margin="80,43,0,0" Width="120">
                <ComboBoxItem Content="Ctrl" />
                <ComboBoxItem Content="Alt" />
                <ComboBoxItem Content="Shift" />
                <ComboBoxItem Content="Ctrl + Alt" />
                <ComboBoxItem Content="Ctrl + Shift"/>
                <ComboBoxItem Content="Shift + Alt" />
                <ComboBoxItem Content="Ctrl +Alt + Shift" />
            </ComboBox>
            <CheckBox x:Name="Settings_OrinateCheck" Content="Auto Orinate Vision" Margin="5, 73,0,0" />
            <Label Content="Vision Timeout" Margin="0, 96, 0, 0"/>
            <ComboBox x:Name="Settings_TimeoutCombo" Margin="100, 99, 0, 0" Width="120">
                <ComboBoxItem Content="0.5 s"/>
                <ComboBoxItem Content="1 s"/>
                <ComboBoxItem Content="2 s"/>
                <ComboBoxItem Content="3 s"/>
                <ComboBoxItem Content="4 s"/>
                <ComboBoxItem Content="5 s"/>
                <ComboBoxItem Content="10 s"/>
                <ComboBoxItem Content="60 s"/>
            </ComboBox>
            <Button Content="Revalidate Library" Margin="5, 130, 0, 0" Height="24" Width="200"/>
            <Grid.Resources>
                <Style TargetType="Label" >
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
                <Style TargetType="CheckBox" >
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
            </Grid.Resources>
        </Grid>
        <player:MaterialButton x:Name="SettingsButton" Icon="Settings"  HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,145,25" />

        <Grid.Resources>
            <Popup x:Key="MetaPopup">
                <ScrollViewer Background="Transparent">
                    <StackPanel >
                        <Grid >
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="Height" Value="22" />
                                    <Setter Property="VerticalAlignment" Value="Top" />
                                    <Setter Property="MaxLines" Value="1" />
                                    <Setter Property="Text" Value="Sample" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="White" />

                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="true">
                                            <Setter Property="Text" Value="NotSupported" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Top" />
                                    <Setter Property="Foreground" Value="White" />
                                </Style>
                            </Grid.Resources>
                            <Label Content="Title" Margin="154,30,0,0" />
                            <TextBox x:Name="Meta_TitleBox" Margin="232,30,5,0"/>
                            <Label Content="Artist" Margin="154,55,0,0"/>
                            <TextBox x:Name="Meta_ArtistBox" Margin="232,55,5,0" />
                            <Label Content="Album" Margin="154,80,0,0"/>
                            <TextBox x:Name="Meta_AlbumBox" Margin="232,80,5,0" />
                            <Label Content="Album Artist" Margin="151,105,0,0" />
                            <TextBox x:Name="Meta_AlbumArtistBox" Margin="232,105,5,0" />
                            <Label Content="Composer" Margin="151,130,0,0" />
                            <TextBox x:Name="Meta_ComposerBox" Margin="232,130,5,0" />
                            <Label Content="Conductor" Margin="151,155,0,0" />
                            <TextBox x:Name="Meta_ConductorBox" Margin="232,155,5,0" />
                            <Label Content="Genre" Margin="151,180,0,0" />
                            <TextBox x:Name="Meta_GenreBox" Margin="232,180,5,0"  />
                            <Label Content="Track" Margin="151,205,0,0"/>
                            <TextBox x:Name="Meta_TrackBox" Margin="232,205,5,0" />
                            <Label Content="Comment" Margin="151,230,0,0" />
                            <TextBox x:Name="Meta_YearBox" Margin="232,230,5,0" />
                            <Label Content="Year" Margin="151,255,0,0"/>
                            <TextBox x:Name="Meta_CommentBox" Margin="232,255,5,0" />
                            <Label Content="Copyright" Margin="151,280,0,0" />
                            <TextBox x:Name="Meta_CopyrightBox" Margin="232,280,5,0" />
                            <Label Content="Lyrics" Margin="0, 305, 5, 0" />
                            <TextBox x:Name="Meta_LyricsBox" Margin="0, 325, 0, 0" Height="250"/>

                            <Image x:Name="Meta_ArtworkImage" Height="150" Width="150"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </Popup>
        </Grid.Resources>
    </Grid>
    <Window.Resources>
        <SolidColorBrush x:Key="KeyOfBackground" Color="#FF303030" />
        <SolidColorBrush x:Key="KeyOfForeground" Color="#FEEE" />
        <Style TargetType="{x:Type Label}" x:Key="TimeLabel">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Width" Value="40" />
        </Style>
        <sys:Double x:Key="Height">400</sys:Double>
        <sys:Double x:Key="Width">400</sys:Double>

        <Storyboard x:Key="VisionOnBoard" AccelerationRatio="0.1" DecelerationRatio="0.8" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation Storyboard.TargetName="Player"
                                     From="{Binding Opacity, ElementName=Player}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="MiniArtworkImage"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="TitleLabel"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="SettingsButton"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="PlayModeButton"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="0"/>
        </Storyboard>
        <Storyboard x:Key="VisionOffBoard" AccelerationRatio="0.1" DecelerationRatio="0.8" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation Storyboard.TargetName="Player"
                                     From="{Binding Opacity, ElementName=Player}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="MiniArtworkImage"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="TitleLabel"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="SettingsButton" 
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="PlayModeButton"
                                     From="{Binding Opacity, ElementName=TitleLabel}" To="1"/>
        </Storyboard>
        <Storyboard x:Key="FullVisionOnBoard" FillBehavior="HoldEnd" AccelerationRatio="0.5" DecelerationRatio="0.5" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation Storyboard.TargetName="PlayPauseButton"
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="NextButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="PreviousButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="PositionSlider"
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="TimeLabel_Current" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="TimeLabel_Full" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="VisionButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
            <DoubleAnimation Storyboard.TargetName="VolumeButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="0"/>
        </Storyboard>
        <Storyboard x:Key="FullVisionOffBoard" FillBehavior="HoldEnd" AccelerationRatio="0.1" DecelerationRatio="0.8" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation Storyboard.TargetName="PlayPauseButton"
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="NextButton"
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="PreviousButton"
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="PositionSlider" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="TimeLabel_Current" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="TimeLabel_Full" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="VisionButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
            <DoubleAnimation Storyboard.TargetName="VolumeButton" 
                                     From="{Binding Opacity, ElementName=PlayPauseButton}" To="1"/>
        </Storyboard>
        <Storyboard x:Key="SettingsOnBoard" AccelerationRatio="0.1" DecelerationRatio="0.9" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation From="{Binding ElementName=SettingsGrid, Path=Opacity}" To="1" Storyboard.TargetName="SettingsGrid"/>
        </Storyboard>
        <Storyboard x:Key="SettingsOffBoard" AccelerationRatio="0.1" DecelerationRatio="0.9" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation From="{Binding ElementName=SettingsGrid, Path=Opacity}" To="0" Storyboard.TargetName="SettingsGrid"/>
        </Storyboard>
        <Storyboard x:Key="WindowWidthBoard" AccelerationRatio="0.3" DecelerationRatio="0.6" Storyboard.TargetName="window">
            <DoubleAnimation Storyboard.TargetProperty="Width" />
        </Storyboard>
    </Window.Resources>
</Window>
