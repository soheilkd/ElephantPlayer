<Window
    x:Class="Player.MainWindow" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" KeyUp="Window_KeyUp"
    xmlns:player="clr-namespace:Player.Controls" xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Name="window" xmlns:design="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d" Loaded="Window_Loaded" Closing="Window_Closing" Drop="Window_Drop" AllowDrop="True"
    Title="Elephant Player" Height="544" Width="651" >
	<Grid Background="{DynamicResource KeyOfBackground}" x:Name="ContentGrid">
		<TabControl x:Name="TabControl" Margin="0,0,0,85" BorderThickness="0" Padding="0">
			<TabItem>
				<TabItem.Header>
					<ContentControl Content="Titles"/>
				</TabItem.Header>
				<ListView x:Name="TitlesView" ContextMenu="{DynamicResource ContextMenu1}">
					<ListView.View>
						<GridView>
							<GridViewColumn Header="Title" Width="300" CellTemplate="{DynamicResource TitleCell}"/>
							<GridViewColumn Header="Artist" Width="100" CellTemplate="{DynamicResource ArtistCell}" />
							<GridViewColumn Header="Album" Width="100" CellTemplate="{DynamicResource AlbumCell}" />
							<GridViewColumn Header="Plays" Width="50" CellTemplate="{DynamicResource PlayCell}"/>
							<GridViewColumn Header="Date Added" Width="150" CellTemplate="{DynamicResource DateCell}"/>
						</GridView>
					</ListView.View>
				</ListView>
			</TabItem>
			<TabItem >
				<TabItem.Header>
					<ContentControl Content="Artists"/>
				</TabItem.Header>
				<ListView Name="ArtistsView" ContextMenu="{DynamicResource ContextMenu1}">
					<ListView.View>
						<GridView>
							<GridViewColumn Header="Title" Width="120" DisplayMemberBinding="{Binding Title}" />
							<GridViewColumn Header="Album" Width="50" DisplayMemberBinding="{Binding Album}" />
							<GridViewColumn Header="Plays" Width="50" DisplayMemberBinding="{Binding PlayCount}" />
						</GridView>
					</ListView.View>
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.ContainerStyle>
								<Style TargetType="{x:Type GroupItem}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Expander IsExpanded="False">
													<Expander.Header>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding Name}" FontWeight="SemiBold" Foreground="White" FontSize="16" VerticalAlignment="Bottom" />
															<TextBlock Text="{Binding ItemCount}" FontSize="18" Foreground="White" FontWeight="Light" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
															<TextBlock Text=" items" FontSize="16" Foreground="White" FontStyle="Italic" VerticalAlignment="Bottom" />
														</StackPanel>
													</Expander.Header>
													<ItemsPresenter />
												</Expander>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</GroupStyle.ContainerStyle>
						</GroupStyle>
					</ListView.GroupStyle>
				</ListView>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<ContentControl Content="Albums"/>
				</TabItem.Header>
				<ListView Name="AlbumsView" ContextMenu="{DynamicResource ContextMenu1}">
					<ListView.View>
						<GridView>
							<GridViewColumn Header="Artist" Width="50" DisplayMemberBinding="{Binding Artist}" />
							<GridViewColumn Header="Title" Width="120" DisplayMemberBinding="{Binding Title}" />
							<GridViewColumn Header="Plays" Width="50" DisplayMemberBinding="{Binding PlayCount}" />
						</GridView>
					</ListView.View>
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.ContainerStyle>
								<Style TargetType="{x:Type GroupItem}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Expander IsExpanded="False">
													<Expander.Header>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding Name}" FontWeight="SemiBold" Foreground="White" FontSize="16" VerticalAlignment="Bottom" />
															<TextBlock Text="{Binding ItemCount}" FontSize="18" Foreground="White" FontWeight="Light" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
															<TextBlock Text=" items" FontSize="16" Foreground="White" FontStyle="Italic" VerticalAlignment="Bottom" />
														</StackPanel>
													</Expander.Header>
													<ItemsPresenter />
												</Expander>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</GroupStyle.ContainerStyle>
						</GroupStyle>
					</ListView.GroupStyle>
				</ListView>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<ContentControl Content="Types" />
				</TabItem.Header>
				<ListView x:Name="TypesView" ContextMenu="{DynamicResource ContextMenu1}">
					<ListView.View>
						<GridView>
							<GridViewColumn Header="Title" Width="300" CellTemplate="{DynamicResource TitleCell}"/>
							<GridViewColumn Header="Artist" Width="100" CellTemplate="{DynamicResource ArtistCell}" />
							<GridViewColumn Header="Album" Width="100" CellTemplate="{DynamicResource AlbumCell}" />
							<GridViewColumn Header="Plays" Width="50" CellTemplate="{DynamicResource PlayCell}"/>
							<GridViewColumn Header="Date Added" Width="150" CellTemplate="{DynamicResource DateCell}"/>
						</GridView>
					</ListView.View>
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.ContainerStyle>
								<Style TargetType="{x:Type GroupItem}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Expander IsExpanded="False">
													<Expander.Header>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding Name}" FontWeight="SemiBold" Foreground="White" FontSize="16" VerticalAlignment="Bottom" />
															<TextBlock Text="{Binding ItemCount}" FontSize="18" Foreground="White" FontWeight="Light" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
															<TextBlock Text=" items" FontSize="16" Foreground="White" FontStyle="Italic" VerticalAlignment="Bottom" />
														</StackPanel>
													</Expander.Header>
													<ItemsPresenter />
												</Expander>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</GroupStyle.ContainerStyle>
						</GroupStyle>
					</ListView.GroupStyle>
				</ListView>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<ContentControl Content="Directories" />
				</TabItem.Header>
				<ListView x:Name="DirectoryView" ContextMenu="{DynamicResource ContextMenu1}">
					<ListView.View>
						<GridView>
							<GridViewColumn Header="Title" Width="300" CellTemplate="{DynamicResource TitleCell}"/>
							<GridViewColumn Header="Artist" Width="100" CellTemplate="{DynamicResource ArtistCell}" />
							<GridViewColumn Header="Album" Width="100" CellTemplate="{DynamicResource AlbumCell}" />
							<GridViewColumn Header="Plays" Width="50" CellTemplate="{DynamicResource PlayCell}"/>
							<GridViewColumn Header="Date Added" Width="150" CellTemplate="{DynamicResource DateCell}"/>
						</GridView>
					</ListView.View>
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.ContainerStyle>
								<Style TargetType="{x:Type GroupItem}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Expander IsExpanded="False">
													<Expander.Header>
														<StackPanel Orientation="Horizontal">
															<TextBlock Text="{Binding Name}" FontWeight="SemiBold" Foreground="White" FontSize="16" VerticalAlignment="Bottom" />
															<TextBlock Text="{Binding ItemCount}" FontSize="18" Foreground="White" FontWeight="Light" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
															<TextBlock Text=" items" FontSize="16" Foreground="White" FontStyle="Italic" VerticalAlignment="Bottom" />
														</StackPanel>
													</Expander.Header>
													<ItemsPresenter />
												</Expander>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</GroupStyle.ContainerStyle>
						</GroupStyle>
					</ListView.GroupStyle>
				</ListView>
			</TabItem>
		</TabControl>
		<player:MediaPlayer x:Name="Player" />
		<Label x:Name="SearchLabel" Content="{Binding Text, ElementName=SearchBox}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0"/>
		<player:MaterialButton x:Name="SearchButton" HorizontalAlignment="Right" VerticalAlignment="Bottom" Icon="DatabaseSearch" 
                         Foreground="White" MouseUp="SearchIcon_Click" Margin="0,0,10,35" EllipseType="Rectular" Width="20" Height="20"/>
		<Popup x:Name="SearchPopup" PlacementTarget="{Binding ElementName=SearchButton}" StaysOpen="False" 
               Placement="Bottom" PopupAnimation="Fade" AllowsTransparency="True">
			<TextBox HorizontalAlignment="Right" VerticalAlignment="Top" Width="140" Height="20" x:Name="SearchBox" TextChanged="SearchBox_TextChanged" />
		</Popup>

		<Image x:Name="MiniArtworkImage" Height="55" Width="55" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="6,0,0,30">
			<Image.Triggers>
				<EventTrigger RoutedEvent="UIElement.MouseDown">
					<BeginStoryboard>
						<Storyboard Storyboard.TargetName="MiniArtworkImage" SpeedRatio="2" AccelerationRatio="0.3" DecelerationRatio="0.7">
							<DoubleAnimation Storyboard.TargetProperty="Width" From="{Binding Width, ElementName=MiniArtworkImage}" To="400"/>
							<DoubleAnimation Storyboard.TargetProperty="Height" From="{Binding Width, ElementName=MiniArtworkImage}" To="400"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="UIElement.MouseUp">
					<BeginStoryboard>
						<Storyboard Storyboard.TargetName="MiniArtworkImage" SpeedRatio="2" AccelerationRatio="0.3" DecelerationRatio="0.7">
							<DoubleAnimation Storyboard.TargetProperty="Width" From="{Binding Width, ElementName=MiniArtworkImage}" To="55"/>
							<DoubleAnimation Storyboard.TargetProperty="Height" From="{Binding Width, ElementName=MiniArtworkImage}" To="55"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Image.Triggers>
		</Image>

	</Grid>
	<Window.Resources>
		<DataTemplate x:Key="TitleCell">
			<TextBlock Text="{Binding Title}" FontSize="16" FontWeight="Normal" Foreground="White"/>
		</DataTemplate>
		<DataTemplate x:Key="ArtistCell">
			<TextBlock Text="{Binding Artist}" FontSize="16" FontWeight="Light" Foreground="White" />
		</DataTemplate>
		<DataTemplate x:Key="AlbumCell">
			<TextBlock Text="{Binding Album}"  FontSize="16" FontWeight="Light" Foreground="White" />
		</DataTemplate>
		<DataTemplate x:Key="PlayCell">
			<TextBlock Text="{Binding PlayCount}" FontSize="16" FontWeight="Light" Foreground="White" />
		</DataTemplate>
		<DataTemplate x:Key="NameCell">
			<TextBlock Text="{Binding Name}"  FontSize="16" FontWeight="Light"  Foreground="White"/>
		</DataTemplate>
		<DataTemplate x:Key="PathCell">
			<TextBlock Text="{Binding Path}"  FontSize="16" FontWeight="Light"  Foreground="White"/>
		</DataTemplate>
		<DataTemplate x:Key="DateCell">
			<TextBlock Text="{Binding AdditionDate}"  FontSize="16" FontWeight="Light"  Foreground="White"/>
		</DataTemplate>
		<sys:String x:Key="LastPath" >D:\\</sys:String>
		<ContextMenu x:Key="ContextMenu1">
			<MenuItem Header="Detergent Meta" Click="Menu_TagDetergent" />
			<MenuItem Header="Play after current" Click="Menu_PlayAfterClick" />
			<MenuItem Header="Open in VLC" Click="Menu_VLC"/>
			<MenuItem Header="Download" Click="Menu_DownloadClick" />
			<MenuItem Header="Move to..." >
				<MenuItem Header="{DynamicResource LastPath}" Click="Menu_MoveClick"/>
				<MenuItem Header="Browse..." Click="Menu_MoveClick"/>
			</MenuItem>
			<MenuItem Header="Copy to..." >
				<MenuItem Header="{DynamicResource LastPath}" Click="Menu_CopyClick"/>
				<MenuItem Header="Browse..." Click="Menu_CopyClick"/>
			</MenuItem>
			<MenuItem Header="Remove" Click="Menu_RemoveClick"/>
			<MenuItem Header="Delete" Click="Menu_DeleteClick" />
			<MenuItem Header="Open Location" Click="Menu_LocationClick"/>
			<MenuItem Header="Properties" Click="Menu_PropertiesClick"/>
		</ContextMenu>
		<Style TargetType="{x:Type ListView}">
			<Setter Property="Background" Value="{DynamicResource KeyOfBackground}" />
			<Setter Property="IsTextSearchEnabled" Value="False" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Style.Resources>
				<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
			</Style.Resources>
		</Style>
		<SolidColorBrush x:Key="KeyOfBackground" Color="#F333" />
		
		<Style TargetType="{x:Type TabItem}">
			<Setter Property="FontSize" Value="17" />
			<Setter Property="FontWeight" Value="Light" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid x:Name="Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
												<EasingThicknessKeyFrame KeyTime="0" Value="0.7,0,0,3" />
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" Background="Transparent"  CornerRadius="3" BorderBrush="LightBlue">
								<ContentPresenter x:Name="ContentSite" ContentSource="Header" Margin="20,5,20,5" RecognizesAccessKey="True" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="1" />
								<Setter Property="Foreground" Value="LightBlue" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="White" />
		</Style>
		<Style TargetType="GridViewColumnHeader">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="BorderBrush" Value="#1000" />
		</Style>
	</Window.Resources>
</Window>
